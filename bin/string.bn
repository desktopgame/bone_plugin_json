_string := string;
toArray := def(self)(ret) {
    ret := array(self.length);
    i := 0;
    while(i < self.length) {
        ret[i] := self.at(i);
        i += 1;
    }
};
startsWith := def(self, range)(ret) {
    if(range.length > self.length) {
        panic("range.length > self.length");
    }
    ret := true;
    i := 0;
    while(i < range.length) {
        if(self.at(i) != range.at(i)) {
            ret := false;
            break;
        }
        i += 1;
    }
};
endsWith := def(self, range)(ret) {
    if(range.length > self.length) {
        panic("range.length > self.length");
    }
    ret := true;
    i := 1;
    while(i < range.length) {
        if(self.at(self.length - i) != range.at(range.length - i)) {
            ret := false;
            break;
        }
        i += 1;
    }
};
substr := def(self, offs, len)(ret) {
    ret := string(self.toArray().sub(offs,len));
};
string := def(array)(ret) {
    {} <- _string(array);
    ret.substr := substr;
    ret.toArray := toArray;
    ret.startsWith := startsWith;
    ret.endsWith := endsWith;
};